using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.IO;
using System.Text;


public partial class Ei_admin_${aspxFileName} : BaseAdminClass
{
    string IMAGE_PATH =  Ei_Constant.${tableName}_ImagePath;
    int IMAGE_HEIGHT = Ei_Constant.${tableName}_Image_H;
    int IMAGE_WIDTH = Ei_Constant.${tableName}_Image_W;
    
    //public static int ${tableName}_Image_W = 100;
    //public static int ${tableName}_Image_H = 100;
    //public static string ${tableName}_ImagePath = "~/media/images/${tableName}/";

    protected void Page_Load(object sender, EventArgs e)
    {

        if (!Page.IsPostBack)
        {
           Load_DataGrid();
           Label_Page_Title.Text="${tableName}";
           Page.Title = "${tableName}";
        }
    }
    protected void GridView1_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        GridView_${tableName}.PageIndex = e.NewPageIndex;
        GridView_${tableName}.DataBind();
    }
    protected void GridView1_PageIndexChanged(object sender, EventArgs e)
    {
        searchGrid();
    }
    protected void GridView1_RowCommand(object sender, GridViewCommandEventArgs e)
    {
        if (e.CommandName == "Sort") { return; }
        if (e.CommandArgument == "First") { return; }
        if (e.CommandArgument == "Next") { return; }
        if (e.CommandArgument == "Last") { return; }
        if (e.CommandArgument == "Prev") { return; }

        int index = Convert.ToInt32(e.CommandArgument);
        GridView_${tableName}.SelectedIndex = index;
        columnID = Convert.ToInt32(GridView_${tableName}.SelectedValue);
        ${tableName} item = getItem();

        if (item != null)
        {
            if (e.CommandName == "btnUp")
            {
                item.Ordering += 1;
            }
            else if (e.CommandName == "btnDown")
            {
                item.Ordering -= 1;
            }
            else if (e.CommandName == "image")
            {
                String lang = get_Lang();
                Response.Redirect("../Common/media.aspx?mod=${tableName}&id=" + columnID + "&lang=" + lang);
            }
            else if (e.CommandName == "btnUpdate")
            {
                if(${retrieveItem})
                {
                    Button_Edit.Visible = true;
                    Button_Save.Visible = false;
                }
            }
            Label_Warning.Text = "";
            Label_Image.Text = "";
            Load_DataGrid();
        }
    }
    protected void GridView1_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (ImageIndex != -1)
        {
            if (e.Row.RowType == DataControlRowType.DataRow)
            {

                string k = e.Row.Cells[ImageIndex].Text.Trim();
                if (k == "")
                    k = "Hata";
                else
                    k = func.GridView_Image(k);
                e.Row.Cells[ImageIndex].Text = k;
            }
        }
    }
    private String get_Lang()
    {
        String lang = Ei_Constant.Default_Lang;
        //if (!String.IsNullOrEmpty(DropDownList_Lang.SelectedValue))
        //{
        //    lang = DropDownList_Lang.SelectedValue;
        //}
        return lang;
    }
    private void EmptyTextBox()
    {
        func.EmptyControls(Panel_TextBox);
    }
    protected void LinkButton_StateOn_Click(object sender, EventArgs e)
    {
        ChangeState(true, DropDownList_State.SelectedValue);
    }
    protected void LinkButton_StateOff_Click(object sender, EventArgs e)
    {
        ChangeState(false, DropDownList_State.SelectedValue);
    }
    private void ChangeState(bool memo, string selected)
    {
        bool isEnter = false;
        GridViewRowCollection Rows = GridView_${tableName}.Rows;
        foreach (GridViewRow row in Rows)
        {
            CheckBox check = row.FindControl("CheckBox_Grid") as CheckBox;

            if (check != null && check.Checked)
            {

                DataKey key = GridView_${tableName}.DataKeys[row.RowIndex];
                columnID = Convert.ToInt32(key.Value);
                ${tableName} item = getItem();
                if (item != null)
                {
                    if (selected == "state")
                    {
                    //    item.State = memo;
                    }
                    else if (selected == "image")
                    {
                    //    item.ImageState = memo;
                    }
                    else if (selected == "main")
                    {
                    //    item.MainPage = memo;
                    }
                    isEnter = true;
                }
            }
        }
        if (isEnter)
        {
            Load_DataGrid();
        }
    }
    private void Load_DataGrid()
    {
        try
        {
            db.SubmitChanges();
            GridView_${tableName}.DataBind();
        }
        catch (Exception ex)
        {
            Label_Warning.Text = ${ERROR} + " " + ex.Message;
        }
        
    }
    protected void Button_Search_Click(object sender, EventArgs e)
    {
        searchGrid();
    }
    protected void TextBox_Search_TextChanged(object sender, EventArgs e)
    {
        searchGrid();
    }
    private void searchGrid()
    {
        String lang = get_Lang();
        string sql = string.Format("${sql_Query}", TextBox_Search.Text.Trim());
        SqlDataSource_${tableName}.SelectCommand = sql;
        SqlDataSource_${tableName}.DataBind();
    }
   
    protected void LinkButton_Order_Click(object sender, EventArgs e)
    {
        bool isEnter = false;
        GridViewRowCollection Rows = GridView_${tableName}.Rows;
        foreach (GridViewRow row in Rows)
        {
            TextBox text = row.FindControl("TextBox_Ordering") as TextBox;

            if (text != null && func.isInteger(text.Text))
            {

                DataKey key = GridView_${tableName}.DataKeys[row.RowIndex];
                columnID = Convert.ToInt32(key.Value);
                ${tableName} item = getItem();
                if (item != null)
                {
                    item.Ordering = Convert.ToInt32(text.Text);
                    isEnter = true;
                }
            }
        }
        if (isEnter)
        {
            Load_DataGrid();
        }
    }
    protected void Button_Save_Click(object sender, EventArgs e)
    {
        Label_Image.Text = "";
        Label_Warning.Text = "";

        if (${ifStatement})
        {
            order = func.CheckOrdering(TextBox_Ordering);

 
            //path = image.CheckImage(
            //    FileUpload_Image,
            //    IMAGE_PATH,
            //    IMAGE_WIDTH,
            //    IMAGE_HEIGHT,
            //    Ei_Image.ImageInsert_Update.Insert,
            //   Label_Image);
    


            ${tableName} item = new ${tableName}();
            if(${initItem})
            {
                    db.${tableName}s.InsertOnSubmit(item);

                    Load_DataGrid();
                    EmptyTextBox();

                    Label_Warning.Text = ${ValidLoad};

            }
            else
            {
                    Label_Warning.Text = ${UnValidUpDate};
            }
        }
        else
        {
            Label_Warning.Text = ${UnValidLoad};
        }

    }
    protected void Button_Edit_Click(object sender, EventArgs e)
    {

        Label_Image.Text = "";
        Label_Warning.Text = "";

        if (${ifStatement})
        {
            order = func.CheckOrdering(TextBox_Ordering);

            ${tableName} item = getItem();
            if (item != null)
            {
              //  path = item.ImagePath;
             //   Label_Image.Text = path;
              //  path = image.CheckImage(FileUpload_Image,
              //     IMAGE_PATH,
               //    IMAGE_WIDTH,
               //    IMAGE_HEIGHT,
               //    Ei_Image.ImageInsert_Update.Update,
               //    Label_Image);


                if(${initItem})
                {

                    Load_DataGrid();
                    EmptyTextBox();

                    Label_Warning.Text = ${ValidUpDate};
                    
                    Button_Edit.Visible = false;
                    Button_Save.Visible = true;
                
                }
                else
                {
                    Label_Warning.Text = ${UnValidUpDate};
                }
              
            }
        }
        else
        {
            Label_Warning.Text = ${UnValidUpDate};
        }

    }
    protected void LinkButton_Delete_Click(object sender, EventArgs e)
    {
        Label_Image.Text = "";
        Label_Warning.Text = "";
        bool isEnter = false;
        GridViewRowCollection Rows = GridView_${tableName}.Rows;
        foreach (GridViewRow row in Rows)
        {
            CheckBox check = row.FindControl("CheckBox_Grid") as CheckBox;

            if (check != null && check.Checked)
            {
                DataKey key = GridView_${tableName}.DataKeys[row.RowIndex];
                columnID = Convert.ToInt32(key.Value);
                ${tableName} item = getItem();
                //image.DeleteImageFile(item.ImagePath,IMAGE_PATH);
                if (item != null)
                {
                    db.${tableName}s.DeleteOnSubmit(item);
                    isEnter = true;
                }
            }
        }
        if (isEnter)
        {
            Load_DataGrid();
            Label_Warning.Text = ${Delete};
        }
    }
    private ${tableName} getItem()
    {
        ${SingleOrDefault}
        
        return item;
    }

    ${initMethod}
    
    ${retrieveMethod}
}
